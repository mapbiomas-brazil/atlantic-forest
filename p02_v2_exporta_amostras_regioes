var versao_out = '3'
var versao_estavel = '2'

var dirout = 'projects/mapbiomas-workspace/AMOSTRAS/col7/MATA_ATLANTICA/SAMPLES/';

var palettes = require('users/mapbiomas/modules:Palettes.js');
var vis = {
    'min': 0,
    'max': 45,
    'palette': palettes.get('classification5')
};

var regioesCollection = ee.FeatureCollection('projects/mapbiomas-workspace/AUXILIAR/Mata_Atlantica_regions_col6_area2000')
print(regioesCollection)
Map.addLayer(regioesCollection, {}, "Regions")

var mapa_estavel_col6 = ee.Image('projects/mapbiomas-workspace/AMOSTRAS/col7/MATA_ATLANTICA/MA_amostras_estaveis85a18_col5_v'+versao_estavel)
Map.addLayer(mapa_estavel_col6, vis, 'mapa_estavel_col6', false);


var n_pr1 = 3000   //princial
var n_se1 = 2000   //secundario
var n_ra1 = 300    //rara
var zero1 = 0

var n_pr2 = 4000   //princial
var n_se2 = 1000   //secundario
var n_ra2 = 500    //rara
var zero2 = 0

var regioes_lista = [//regiao,     3,    21,     4,     9,    11,    12,    13,    29,    22,     33],
                    ['reg_01', n_se1, n_pr2, n_ra1,  n_ra1, zero1, n_ra2, zero1, n_ra1, n_ra2, n_ra1],
                    ['reg_02', n_pr1, n_pr2, zero1,  n_ra1, zero1, zero1, n_ra1, zero1, n_ra1, n_ra1],
                    ['reg_03', n_se1, n_pr2, zero1,  n_ra1, n_ra1, zero1, n_ra1, n_ra1, n_ra1, n_ra1],
                    ['reg_04', n_pr1, n_pr1, zero1,  n_ra1, n_ra1, zero1, zero1, zero1, n_ra1, n_ra1],
                    ['reg_05', n_pr1, n_pr1, zero1,  n_ra1, zero1, zero1, zero1, zero1, n_ra1, n_ra1],
                    ['reg_06', n_se1, n_pr2, zero1,  n_ra1, zero1, zero1, zero1, zero1, n_ra1, n_ra1],
                    ['reg_07', n_se1, n_pr2, zero1,  n_ra1, zero1, zero1, zero1, zero1, n_ra1, n_ra1],
                    ['reg_08', n_se1, n_pr1, zero1,  n_ra1, zero1, zero1, zero1, zero1, n_ra1, n_ra1],
                    ['reg_09', n_se1, n_pr2, n_ra1,  n_ra1, zero1, zero1, zero1, n_ra2, n_ra1, n_ra1],
                    ['reg_10', n_se1, n_pr2, zero1,  n_ra1, n_ra1, zero1, zero1, zero1, n_ra1, n_ra1],
                    ['reg_11', n_se1, n_pr1, zero1,  zero1, zero1, zero1, zero1, n_ra1, n_ra1, n_ra1],
                    ['reg_12', n_se1, n_pr2, zero1,  n_ra1, n_ra1, zero1, zero1, zero1, n_ra1, n_ra1],
                    ['reg_13', n_se1, n_pr2, zero1,  n_ra1, n_ra1, zero1, zero1, zero1, n_ra1, n_ra1],
                    ['reg_14', n_se1, n_pr2, zero1,  n_ra1, n_ra1, zero1, n_ra1, zero1, n_ra1, n_ra1],
                    ['reg_15', n_se1, n_pr2, zero1,  n_ra1, n_ra1, zero1, zero1, zero1, n_ra1, n_ra1],
                    ['reg_16', n_se1, n_pr1, zero1,  n_ra1, n_ra1, zero1, zero1, n_ra1, n_ra1, n_ra1],
                    ['reg_17', n_se1, n_pr2, zero1,  zero1, zero1, zero1, zero1, zero1, n_ra1, n_ra1],
                    ['reg_18', n_se1, n_pr2, zero1,  n_ra1, n_ra1, zero1, zero1, zero1, n_ra1, n_ra1],
                    ['reg_19', n_pr1, n_pr1, zero1,  n_ra1, n_ra1, zero1, zero1, n_ra1, n_ra1, n_ra1],
                    ['reg_20', n_se1, n_pr2, zero1,  n_ra1, n_ra1, zero1, zero1, n_ra1, n_ra1, n_ra1],
                    ['reg_21', n_se1, n_pr2, zero1,  n_ra1, zero1, zero1, zero1, zero1, n_ra1, n_ra1],
                    ['reg_22', n_se1, n_pr2, n_se2,  zero1, zero1, zero1, n_ra1, zero1, n_ra1, n_ra1],
                    ['reg_23', n_se1, n_pr1, n_se2,  n_ra1, zero1, zero1, zero1, n_ra2, n_ra1, n_ra1],
                    ['reg_24', n_se1, n_se1, zero1,  zero1, zero1, n_pr1, zero1, n_ra1, n_ra1, n_ra1],
                    ['reg_25', n_se1, n_pr2, zero1,  n_ra1, n_ra1, zero1, n_ra1, zero1, n_ra1, n_ra1],
                    ['reg_26', n_se1, n_pr2, zero1,  n_ra1, n_ra1, n_ra1, zero1, zero1, n_ra1, n_ra1],
                    ['reg_27', n_se1, n_pr2, n_se2,  zero1, n_ra1, zero1, n_ra1, zero1, n_ra1, n_ra1],
                    ['reg_28', n_se1, n_pr1, zero1,  n_ra1, n_ra1, n_ra1, zero1, zero1, n_ra1, n_ra1],
                    ['reg_29', n_se1, n_pr2, zero1,  n_ra1, n_ra1, zero1, zero1, zero1, n_ra1, n_ra1],
                    ['reg_30', n_se1, n_pr1, zero1,  zero1, n_ra1, zero1, zero1, n_ra1, n_ra1, n_ra2],
              ]

for (var i_regiao=0;i_regiao<regioes_lista.length; i_regiao++){
  var lista = regioes_lista[i_regiao];
  var regiao = lista[0];

  var limite = regioesCollection.filterMetadata('reg_id', "equals", regiao);

  var reg_training_estavel = mapa_estavel_col6.stratifiedSample({
    'numPoints': 0,
    'classBand': 'reference',
    'region': limite,
    'classValues': [       3,       21,         4,        9,       11,       12,       13,       29,       22,        33],
    'classPoints': [lista[1], lista[2],  lista[3], lista[4], lista[5], lista[6], lista[7], lista[8],  lista[9],  lista[10]],
    'scale': 30, 
    'seed': 1, 
    'geometries': true
  })
  
  
  reg_training_estavel = reg_training_estavel.map(
            function (feature) {
                return feature.set('reg_id', regiao);
            });

  if (i_regiao == 0){ var training_estavel = reg_training_estavel }  
  else {training_estavel = training_estavel.merge(reg_training_estavel); }

}

print(training_estavel.size())


Export.table.toAsset(training_estavel, 'samples_stable_v'+versao_out+'_reg', dirout+ 'samples_stable_v'+versao_out+'_reg');
var limite_MA = /* color: #d63000 */ee.Geometry.Polygon(
        [[[-48.593359954293625, -30.678347823900353],
          [-47.275000579293625, -25.525376684152373],
          [-40.595313079293625, -23.284530667538736],
          [-33.915625579293625, -6.580343714417967],
          [-35.453711516793625, -4.217995607905081],
          [-44.198828704293625, -17.856203449528717],
          [-50.483008391793625, -17.52126295946964],
          [-55.712500579293625, -21.74193426005608],
          [-55.492774016793625, -29.72888025446976]]]);
    

// Define the biome
var bioma = "MATAATLANTICA";

// Define the input and output versions
var vesion_in = '100';
var versao_out = '101';

// Define the description of the process
var descricao = 'Blend Agricultura';

// Define the collection id
var col = 9.0;

// Define the input and output prefixes
var prefixo_in = 'MA_col9_p05a_v';
var prefixo_out = 'MA_col9_p05b_v';

// Define the output directory
var dirout = 'projects/mapbiomas-workspace/COLECAO9/pos_classificacao-ma/';

// Load the agriculture images for SE and NE regions
var img_agric_SE = ee.Image(
  'projects/mapbiomas-workspace/COLECAO9/classificacao-ma/agric_SE-RF85a23_v3');
var img_agric_NE = ee.Image(
  'projects/mapbiomas-workspace/COLECAO9/classificacao-ma/agric_NE-RF85a23_v2');
print(img_agric_SE);

// Load the classification image
var class4GAP = ee.Image(dirout+prefixo_in+vesion_in)//.mask(bioma250mil_MA);
print(class4GAP);

////*************************************************************
// Do not Change from these lines
////*************************************************************

// Load the biomes image
//var biomes = ee.Image('projects/mapbiomas-workspace/AUXILIAR/biomas-raster-41');
//var bioma250mil_MA = biomes.mask(biomes.eq(2));
//Map.addLayer(bioma250mil_MA,{'palette': 'ccffcc'}, 'bioma250mil_MA', false);

// Import the palettes module
var palettes = require('users/mapbiomas/modules:Palettes.js');

// Define the palettes for visualization
var pal = palettes.get('classification2');
var vis = {bands: 'classification_2022','min': 0,'max': 62,'palette': palettes.get('classification8')};
var vis2 = {'min': 0,'max': 62,'palette': palettes.get('classification8')};

// Add the agriculture images to the map
Map.addLayer(img_agric_SE, vis, 'img_agric_SE');
Map.addLayer(img_agric_NE, vis, 'img_agric_NE');

// Add the classification image to the map
Map.addLayer(class4GAP, vis, 'class4GAP');

// Define the years to process
var anos = ['1985','1986','1987','1988','1989','1990','1991','1992','1993','1994','1995',
            '1996','1997','1998','1999','2000','2001','2002','2003','2004','2005','2006',
            '2007','2008','2009','2010','2011','2012','2013','2014','2015','2016','2017',
            '2018','2019','2020','2021','2022','2023'];

//var anos = ['2022'];

// Loop through the years and blend the classification image with the agriculture images
for (var i_ano=0;i_ano<anos.length; i_ano++){  
  var ano = anos[i_ano]; 
  
  // Add the original classification image to the map
  Map.addLayer(class4GAP.select('classification_'+ano), vis2, 'class_orig_'+ano, false);
  
//  // Create an image collection from the agriculture images for the current year
//  var class_out_agric_merge = ee.ImageCollection.fromImages(
//                [img_agric_SE.select('classification_'+ano),
//                 img_agric_NE.select('classification_'+ano)])
//                .mosaic();
//
//  
//  // Remap the agriculture image and rename the band
//  var class_out_agric = class_out_agric_merge.select('classification_'+ano).remap([19],[100]).rename('classification_'+ano);
//  // Add the agriculture image to the classification image
//  var class_out_agric_ano = class4GAP.select('classification_'+ano).add(class_out_agric);

  // Remap the classification image for the current year
  var class_ano = class4GAP.select('classification_'+ano).remap(
       [3,4,9,11,12,13,21,22,29,33,19,41],
       [3,4,3,11,12,13,21,22,29,33,21,21]).rename('classification_'+ano);
//    .blend(class_out_agric_ano.remap([121],[ 19]).rename('classification_'+ano))
//    .blend(class_out_agric_ano.remap([103, 104],[ 19, 19]).rename('classification_'+ano));

  // Add the blended image to the map
  //Map.addLayer(class_ano, vis2, 'class_agri_'+ano, false);
  
  // Combine the blended images for all years
  if (i_ano == 0){ 
    var image = class_ano;
    }  
  else {
    image = image.addBands(class_ano); 

  }
}

//print(class_outTotal);
// Add the final blended image to the map
Map.addLayer(image, vis, 'class_final');

// Define the years to process
var years = [
    1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992,
    1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
    2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
    2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
    2017, 2018, 2019, 2020, 2021, 2022, 2023
    ];

// Create a list of band names
var bandNames = ee.List(
    years.map(
        function (year) {
            return 'classification_' + String(year);
        }
    )
);

// Generate a histogram dictionary of band names and image band names
var bandsOccurrence = ee.Dictionary(
    bandNames.cat(image.bandNames()).reduce(ee.Reducer.frequencyHistogram())
);

//print(bandsOccurrence);

// Create a dictionary of bands with masked bands
var bandsDictionary = bandsOccurrence.map(
    function (key, value) {
        return ee.Image(
            ee.Algorithms.If(
                ee.Number(value).eq(2),
                // If the band occurs twice, select the band from the original image
                image.select([key]).byte(),
                // If the band occurs once, create a masked band
                ee.Image().rename([key]).byte().updateMask(image.select(0))
            )
        );
    }
);

// Convert the dictionary to an image
var imageAllBands = ee.Image(
    bandNames.iterate(
        function (band, image) {
            // Add the band from the dictionary to the image
            return ee.Image(image).addBands(bandsDictionary.get(ee.String(band)));
        },
        // Initialize the image with an empty selection
        ee.Image().select()
    )
);

// Generate an image of pixel years
var imagePixelYear = ee.Image.constant(years)
    .updateMask(imageAllBands)
    .rename(bandNames);
    
// Add connected pixels bands
var imageFilledConnected = image.addBands(
    image
        .connectedPixelCount(100, true)
        .rename(bandNames.map(
            function (band) {
                return ee.String(band).cat('_conn');
            }
        ))
);

//print(imageFilledConnected);

// Set the metadata for the final classification image
imageFilledConnected = imageFilledConnected
.set('territory', 'BRAZIL')
.set('biome', 'MATAATLANTICA')
.set('source', 'arcplan')
.set('version', versao_out)
.set('year', versao_out)
.set('collection_id', col)
.set('description', descricao);

// Export the final classification image to an asset
Export.image.toAsset({
    'image': imageFilledConnected,
    'description': prefixo_out+versao_out,
    'assetId': dirout+prefixo_out+versao_out,
    'pyramidingPolicy': {
        '.default': 'mode'
    },
    'region': limite_MA,
    'scale': 30,
    'maxPixels': 1e13
});

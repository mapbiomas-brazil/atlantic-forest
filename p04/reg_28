
var regiaoID = 'reg_28'; 
var coleta = false;

var anos = [1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021];
//if (coleta) {var anos = [2019]}

var RFtrees = 70;
if (coleta) {var RFtrees = 10}

var versao_out = 2;
var versao_pt = 'v3';
var versao_estavel = '1'
var dir_pt_in = 'projects/mapbiomas-workspace/AMOSTRAS/col7/MATA_ATLANTICA/SAMPLES/';

var bioma250mil = ee.FeatureCollection('projects/mapbiomas-workspace/AUXILIAR/biomas_IBGE_250mil');
var bioma250mil_MA_vetor = bioma250mil.filterMetadata('Bioma','equals', 'Mata Atlântica');
var biomes = ee.Image('projects/mapbiomas-workspace/AUXILIAR/biomas-raster-41');
var bioma250mil_MA = biomes.mask(biomes.eq(2));
//Map.addLayer(bioma250mil_MA)
var palettes = require('users/mapbiomas/modules:Palettes.js');
var vis = {
    'min': 0,
    'max': 45,
    'palette': palettes.get('classification5')
};
var regioesCollection = ee.FeatureCollection('projects/mapbiomas-workspace/AUXILIAR/Mata_Atlantica_regions_col6_area2000');
//Map.addLayer(regioesCollection);

var visParMedian2 = {bands: ['swir1_median', 'nir_median', 'red_median'],gain: [0.08, 0.06, 0.2],gamma: 0.85}

var bioma = "MATAATLANTICA";

var pts = ee.FeatureCollection('projects/mapbiomas-workspace/AMOSTRAS/col7/MATA_ATLANTICA/SAMPLES/samples_stable_' + versao_pt + '_reg');
//Map.addLayer(pts, {}, 'pt', false)
var dirout = 'projects/mapbiomas-workspace/COLECAO7/classificacao-test/';

var limite = regioesCollection.filterMetadata('reg_id', "equals", regiaoID);
// var limite = geometry

var blank = ee.Image(0).mask(0);
var outline = blank.paint(limite, 'AA0000', 2); 
var visPar = {'palette':'000000','opacity': 0.6};
Map.addLayer(outline, visPar, regiaoID, false);


var mapa_estavel_col6 = ee.Image('projects/mapbiomas-workspace/AMOSTRAS/col7/MATA_ATLANTICA/MA_amostras_estaveis85a20_col6_v'+versao_estavel)
Map.addLayer(mapa_estavel_col6, vis, 'mapa_estavel_col6', false);
var blank = ee.Image(0).mask(0);
var outline = blank.paint(limite, 'AA0000', 2); 
var visPar = {'palette':'000000','opacity': 0.6};
Map.addLayer(outline, visPar, regiaoID, false);

s = ee.List(['blue_median','blue_median_dry','blue_median_wet','blue_min','blue_stdDev','cai_median','cai_median_dry','cai_stdDev','cloud_median','cloud_stdDev','evi2_amp','evi2_median','evi2_median_dry','evi2_median_wet','evi2_stdDev','gcvi_median','gcvi_median_dry','gcvi_median_wet','gcvi_stdDev','green_median','green_median_dry','green_median_texture','green_median_wet','green_min','green_stdDev','gv_amp','gv_median','gv_stdDev','gvs_median','gvs_median_dry','gvs_median_wet','gvs_stdDev','hallcover_median','hallcover_stdDev','latitude','longitude','ndfi_amp','ndfi_median','ndfi_median_dry','ndfi_median_wet','ndfi_stdDev','ndvi_amp','ndvi_median','ndvi_median_dry','ndvi_median_wet','ndvi_stdDev','ndwi_amp','ndwi_median','ndwi_median_dry','ndwi_median_wet','ndwi_stdDev','nir_median','nir_median_dry','nir_median_wet','nir_min','nir_stdDev','npv_median','pri_median','pri_median_dry','pri_median_wet','red_median','red_median_dry','red_median_wet','red_min','red_stdDev','savi_median','savi_median_dry','savi_median_wet','savi_stdDev','sefi_median','sefi_median_dry','sefi_stdDev','shade_median','shade_stdDev','slope','soil_amp','soil_median','soil_stdDev','swir1_median','swir1_median_dry','swir1_median_wet','swir1_min','swir1_stdDev','swir2_median','swir2_median_dry','swir2_median_wet','swir2_min','swir2_stdDev','wefi_amp','wefi_median','wefi_median_wet','wefi_stdDev','amp_ndvi_3anos','amp_nfvi_3anos'])
// Coleção 6
var bandNames = ee.List(['gcvi_median_dry','gcvi_median_wet','red_median_wet','swir1_median_dry','gcvi_median','ndvi_median_wet','red_median','cai_median','savi_median_wet','swir1_median','gcvi_stdDev','green_min','swir1_median_wet','savi_median_dry','nir_median','swir2_median_wet','red_min','savi_median','nir_median_wet','evi2_median','red_median_dry','evi2_median_wet','swir2_median_dry','swir2_median','ndvi_median_dry','green_median_wet','green_median','latitude','wefi_median_wet','evi2_median_dry','longitude','ndwi_median_wet','ndwi_stdDev','ndwi_median','amp_ndvi_3anos','slope'])

var shuffle = function (collection, seed) {
    collection = collection.randomColumn('random', seed || 1)
        .sort('random', true)
        .map(function (feature) {
                var rescaled = ee.Number(feature.get('random')).multiply(1000000000).round();
                return feature.set('new_id', rescaled)});
    var randomIdList = ee.List(collection.reduceColumns(ee.Reducer.toList(), ['new_id']).get('list'));
    var sequentialIdList = ee.List.sequence(1, collection.size());
    var shuffled = collection.remap(randomIdList, sequentialIdList, 'new_id');
    return shuffled;
};


var vis_hand = {
    'min': 0,
    'max': 60,
    'palette': 'blue,white,green,orange,red,brown'
};
// var hand30_100 = ee.ImageCollection('users/gena/global-hand/hand-100').filterBounds(limite).mosaic()
// var hand30_1000 =  ee.Image("users/gena/GlobalHAND/30m/hand-1000")
var hand30_1000 =  ee.Image("projects/nexgenmap/MapBiomas2/ANCILARY/HAND_30_1000_South_America")

// Map.addLayer(hand30_100,vis_hand,'hand_1000',false)
Map.addLayer(hand30_1000,vis_hand,'hand_1000',false)

var asset_mosaicos_col6 = 'projects/nexgenmap/MapBiomas2/LANDSAT/BRAZIL/mosaics-2';

for (var i_ano=0;i_ano<anos.length; i_ano++){
  var ano = anos[i_ano];

  if      (ano == 1985) {
    var ano1 = 1985; var ano2 = 1986; var ano3 = 1987
    var asset1 = 'l5'; var asset2 = 'l5'; var asset3 = 'l5'
  }
  else if (ano == 1986) {
    var ano1 = 1986; var ano2 = 1985; var ano3 = 1987
    var asset1 = 'l5'; var asset2 = 'l5'; var asset3 = 'l5'
  }
  else if (ano == 2000) {
    var ano1 = 2000; var ano2 = 1999; var ano3 = 1998
    var asset1 = 'l7'; var asset2 = 'l5'; var asset3 = 'l5'
  }
  else if (ano == 2001)   {
    var ano1 = 2001; var ano2 = 2000; var ano3 = 1999
    var asset1 = 'l7'; var asset2 = 'l7'; var asset3 = 'l5'
  }
  else if (ano == 2002) {
    var ano1 = 2002; var ano2 = 2001; var ano3 = 2000
    var asset1 = 'l7'; var asset2 = 'l7'; var asset3 = 'l7'
  }
  else if (ano == 2003) {
    var ano1 = 2003; var ano2 = 2002; var ano3 = 2001
     var asset1 = 'l5'; var asset2 = 'l7'; var asset3 = 'l7'
  }
  else if (ano == 2004) {
    var ano1 = 2004; var ano2 = 2003; var ano3 = 2002
     var asset1 = 'l5'; var asset2 = 'l5'; var asset3 = 'l7'
  }
  else if (ano == 2012) {
    var ano1 = 2012; var ano2 = 2011; var ano3 = 2010
    var asset1 = 'l7'; var asset2 = 'l5'; var asset3 = 'l5'
  }
  else if (ano == 2013) {
    var ano1 = 2013; var ano2 = 2012; var ano3 = 2011
    var asset1 = 'l8'; var asset2 = 'l7'; var asset3 = 'l5'
  }
  else if (ano == 2014) {
    var ano1 = 2014; var ano2 = 2013; var ano3 = 2012
    var asset1 = 'l8'; var asset2 = 'l8'; var asset3 = 'l7'
  }
  else if (ano == 2015) {
    var ano1 = 2015; var ano2 = 2014; var ano3 = 2013
    var asset1 = 'l8'; var asset2 = 'l8'; var asset3 = 'l8'
  }
  else if (ano == 2016) {
    var ano1 = 2016; var ano2 = 2015; var ano3 = 2014
    var asset1 = 'l8'; var asset2 = 'l8'; var asset3 = 'l8'
  }
  else if (ano == 2017) {
    var ano1 = 2017; var ano2 = 2016; var ano3 = 2015
    var asset1 = 'l8'; var asset2 = 'l8'; var asset3 = 'l8'
  }
  else if (ano == 2018) {
    var ano1 = 2018; var ano2 = 2017; var ano3 = 2016
    var asset1 = 'l8'; var asset2 = 'l8'; var asset3 = 'l8'
  }
  else if (ano == 2019) {
    var ano1 = 2019; var ano2 = 2018; var ano3 = 2017
    var asset1 = 'l8'; var asset2 = 'l8'; var asset3 = 'l8'
  }
  else if (ano == 2020) {
    var ano1 = 2020; var ano2 = 2019; var ano3 = 2018
    var asset1 = 'l8'; var asset2 = 'l8'; var asset3 = 'l8'
  }
  else if (ano == 2021) {
    var ano1 = 2021; var ano2 = 2020; var ano3 = 2019
    var asset1 = 'l8'; var asset2 = 'l8'; var asset3 = 'l8'
  }
  else {
    var ano1 = ano; var ano2 = ( ano - 1); var ano3 = ( ano - 2)
    var asset1 = 'l5'; var asset2 = 'l5'; var asset3 = 'l5'
  }

  
var colecao6 = ee.Image('projects/mapbiomas-workspace/public/collection6/mapbiomas_collection60_integration_v1').select('classification_'+ano)
                  .remap(
                  [3, 4, 5, 9,11,12,13,15,18,19,20,36,39,41,21,22,23,24,25,26,29,30,31,32,33],
                  [3, 4, 3, 9,11,12,13,21,21,21,21,21,21,21,21,22,22,22,22,33,29,22,33,13,33]);

  var mosaicoC3 = ee.ImageCollection('projects/mapbiomas-workspace/MOSAICOS/workspace-c3')
                      .filterMetadata('biome', 'equals', bioma)
                      .filterMetadata('year', 'equals', ano )
                      .filterBounds(limite)
                      .mosaic()
    // Map.addLayer(mosaicoC3, {'bands':['median_swir1','median_nir','median_red'], 'gain':[0.08, 0.06,0.2],'gamma':0.5 }, 'C3_Img_Year_'+ano, false);


    var mosaicoTotal = ee.ImageCollection(asset_mosaicos_col6)
                        .filterMetadata('biome', 'equals', bioma)
                        .filterMetadata('year', 'equals', ano1)
                        .filter(ee.Filter.eq('satellite', asset1))
                        .filterBounds(limite)
                        .mosaic()

    var mosaico1ano_antes = ee.ImageCollection(asset_mosaicos_col6)
                      .filterMetadata('biome', 'equals', bioma)
                      .filterMetadata('year', 'equals', ano2)
                      .filter(ee.Filter.eq('satellite', asset2))
                      .filterBounds(limite)
                      .mosaic()

    var mosaico2anos_antes = ee.ImageCollection(asset_mosaicos_col6)
                      .filterMetadata('biome', 'equals', bioma)
                      .filterMetadata('year', 'equals', ano3)
                      .filter(ee.Filter.eq('satellite', asset3))
                      .filterBounds(limite)
                      .mosaic()
                      
    var mosaico85 = ee.ImageCollection(asset_mosaicos_col6)
                      .filterMetadata('biome', 'equals', bioma)
                      .filterMetadata('year', 'equals', 1985)
                      .filter(ee.Filter.eq('satellite', 'l5'))
                      .filterBounds(limite)
                      .mosaic()
    var mosaico86 = ee.ImageCollection(asset_mosaicos_col6)
                      .filterMetadata('biome', 'equals', bioma)
                      .filterMetadata('year', 'equals', 1986)
                      .filter(ee.Filter.eq('satellite', 'l5'))
                      .filterBounds(limite)
                      .mosaic()

    var min3anos = ee.ImageCollection.fromImages([mosaicoTotal.select('ndvi_median'),
                                                  mosaico1ano_antes.select('ndvi_median'),
                                                  mosaico2anos_antes.select('ndvi_median')]).min()
    
    var max3anos = ee.ImageCollection.fromImages([mosaicoTotal.select('ndvi_median_wet'),
                                                  mosaico1ano_antes.select('ndvi_median_wet'),
                                                  mosaico2anos_antes.select('ndvi_median_wet')]).max()

    var amp3anos_ndvi = max3anos.subtract(min3anos).rename('amp_ndvi_3anos')
//    Map.addLayer(amp3anos_ndvi, {'min':0, 'max':500, 'palette':ndvi_color}, 'amp3anos_ndvi', true);
    mosaicoTotal = mosaicoTotal.addBands(amp3anos_ndvi)

    var min3anos = ee.ImageCollection.fromImages([mosaicoTotal.select('ndfi_median_wet'),
                                                  mosaico1ano_antes.select('ndfi_median_wet'),
                                                  mosaico2anos_antes.select('ndfi_median_wet')]).min()
    
    var max3anos = ee.ImageCollection.fromImages([mosaicoTotal.select('ndfi_median_wet'),
                                                  mosaico1ano_antes.select('ndfi_median_wet'),
                                                  mosaico2anos_antes.select('ndfi_median_wet')]).max()

    var amp3anos_ndfi = max3anos.subtract(min3anos).rename('amp_nfvi_3anos')
    mosaicoTotal = mosaicoTotal.addBands(amp3anos_ndfi)

     var ll = ee.Image.pixelLonLat().clip(limite);
    
    var long = ll.select('longitude').add(34.8).multiply(-1).multiply(1000).toInt16()
    var lati = ll.select('latitude').add(5).multiply(-1).multiply(1000).toInt16()
    
    mosaicoTotal = mosaicoTotal.addBands(long.rename('longitude'))
    mosaicoTotal = mosaicoTotal.addBands(lati.rename('latitude' ))

  var BDamostras = ee.FeatureCollection(dir_pt_in+'pontos_train_'+versao_pt+'_'+ano)
                    .filterMetadata('reg_id', 'equals', regiaoID)
                    
  if (coleta) {    
//    print(BDamostras.limit(100))
//    Map.addLayer(mosaico85, visParMedian2, 'Img_Year_85', false);  
//    Map.addLayer(mosaico86, visParMedian2, 'Img_Year_86', false);  
//    Map.addLayer(mosaico90, visParMedian2, 'Img_Year_90', false);  
//    Map.addLayer(mosaico95, visParMedian2, 'Img_Year_95', false);  
//    Map.addLayer(mosaico00, visParMedian2, 'Img_Year_00', false);  
//    Map.addLayer(mosaico05, visParMedian2, 'Img_Year_05', false);  
//    Map.addLayer(mosaico10, visParMedian2, 'Img_Year_10', false);  
//    Map.addLayer(mosaico15, visParMedian2, 'Img_Year_15', false);  
    Map.addLayer(mosaicoTotal, visParMedian2, 'Img_Year_'+ano, false);
//    Map.addLayer(colecao5.clip(limite), vis, 'Colecao 5 - '+ano, true);
//    Map.addLayer(mosaicoC3, {'bands':['median_swir1','median_nir','median_red'], 'gain':[0.08, 0.06,0.2],'gamma':0.5 }, 'C3_Img_Year_'+ano, false);
    }
    
    var BDflo = BDamostras.filterMetadata("reference", "equals", 3)
    BDflo = shuffle(BDflo, 2).limit(700)
    var BDsav = BDamostras.filterMetadata("reference", "equals", 4)//.limit(100)
    var BDreflo = BDamostras.filterMetadata("reference", "equals", 9)
    var BDvarzea = BDamostras.filterMetadata("reference", "equals", 11)
    var BDcampo = BDamostras.filterMetadata("reference", "equals", 12)
    var BDOutroNFlo = BDamostras.filterMetadata("reference", "equals", 13)
    var BDagro = BDamostras.filterMetadata("reference", "equals", 21)
    // BDagro = shuffle(BDagro, 2).limit(2500)
    var BDNaoVeg = BDamostras.filterMetadata("reference", "equals", 22)
    var BDAflora = BDamostras.filterMetadata("reference", "equals", 29)
    var BDagua = BDamostras.filterMetadata("reference", "equals", 33)





  var training = BDflo.merge(BDreflo).merge(BDcampo)//.merge(BDsav).merge(BDOutroNFlo).merge(BDAflora)
                      .merge(BDagro).merge(BDNaoVeg).merge(BDagua)
 
 
  var classifier = ee.Classifier.smileRandomForest({numberOfTrees: RFtrees, variablesPerSplit:1}).train(training, 'reference', bandNames);
  // print(classifier.explain())
  var classified = mosaicoTotal.classify(classifier).mask(mosaicoTotal.select('blue_median'));
  classified = classified.select(['classification'],['classification_'+ano]).clip(limite.geometry()).toInt8()
if (coleta) {  Map.addLayer(classified, vis, 'RF'+ano+"_"+regiaoID, false);}

  if (i_ano == 0){ var classified85a21 = classified }  
  else {classified85a21 = classified85a21.addBands(classified); }
  
}

classified85a21 = classified85a21
.set('territory', 'BRAZIL')
.set('biome', 'MATA ATÂNTICA')
.set('source', 'arcplan')
.set('version', '2')
.set('year', versao_out)
.set('collection_id', 7.0)

//print(classified85a21)

Export.image.toAsset({
  "image": classified85a21.toInt8(),
  "description": regiaoID+'-'+'RF85a21_v'+versao_out,
  "assetId": dirout + regiaoID+'-'+'RF85a21_v'+versao_out,
  "scale": 30,
  "pyramidingPolicy": {
      '.default': 'mode'
  },
  "maxPixels": 1e13,
  "region": limite
});    


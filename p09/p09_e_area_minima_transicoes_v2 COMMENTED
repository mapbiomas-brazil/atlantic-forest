var limite_MA = /* color: #d63000 */ee.Geometry.Polygon(
        [[[-48.593359954293625, -30.678347823900353],
          [-47.275000579293625, -25.525376684152373],
          [-40.595313079293625, -23.284530667538736],
          [-33.915625579293625, -6.580343714417967],
          [-35.453711516793625, -4.217995607905081],
          [-44.198828704293625, -17.856203449528717],
          [-50.483008391793625, -17.52126295946964],
          [-55.712500579293625, -21.74193426005608],
          [-55.492774016793625, -29.72888025446976]]]);


// Define the input and output versions
var vesion_in = '75';
var versao_out = '76';

// Define the description of the process
var descricao = 'Área mínima de transição';

// Define the collection id
var col = 9.0;

// Define the input and output prefixes
var prefixo_in = 'MA_col9_p09d_v';
var prefixo_out = 'MA_col9_p09e_v';

// Define the output directory
var dirout = 'projects/mapbiomas-workspace/COLECAO9/pos_classificacao-ma/';

// Define the minimum number of pixels for a transition
var min_pix = 6;

// Load the classification image
var col7 =  ee.Image(dirout+prefixo_in+vesion_in);
Map.addLayer(col7, {}, 'col7', false);

// Import the palettes module
var palettes = require('users/mapbiomas/modules:Palettes.js');

// Define the palettes for visualization
var vis = {
    'min': 0,
    'max': 45,
    'palette': palettes.get('classification5')
};
var vis2 = {
    'bands': 'classification_1991',
    'min': 0,
    'max': 45,
    'palette': palettes.get('classification5')
};

// Define the years to process
var anos = [
    1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992,
    1993, 1994, 1995, 1996, 1997, 1998, 1999,
    2000, 2001, 2002, 2003, 2004, 2005, 2006,
    2007, 2008, 2009, 2010, 2011, 2012, 2013,
    2014, 2015, 2016, 2017, 2018, 2019, 2020, 
    2021, 2022
    ];

// Initialize the corrected classification image
var class_corrigido = col7.select('classification_1985');

// Loop through the years and apply corrections
for (var i_ano=0;i_ano<anos.length; i_ano++){
  var ano = anos[i_ano];
  
  // Select the classification for the current and next year
  if (ano == 1985) {var class_ano_atual = col7.select('classification_'+ano);}
  else {class_ano_atual = class_ano_segui_corr;}
  
  var class_ano_segui = col7.select('classification_'+ (ano + 1));
  
  // Create a combined image for transitions
  var transicao = (class_ano_atual.multiply(100)).add(class_ano_segui);
//  var conectedtransicao = transicao.connectedPixelCount(10,true).reproject('epsg:4326', null, 30);

  // Apply corrections for transitions with less than the minimum number of pixels
  var erro_desma_0321 = transicao.eq(321).and(transicao.eq(321).connectedPixelCount(10,true).lt(min_pix));
  var erro_regen_2103 = transicao.eq(2103).and(transicao.eq(2103).connectedPixelCount(10,true).lt(min_pix));
  var class_ano_segui_corr = class_ano_segui.blend(erro_desma_0321.remap([1],[3]));
  class_ano_segui_corr = class_ano_segui_corr.blend(erro_regen_2103.remap([1],[21]));

  var erro_desma_0421 = transicao.eq(421).and(transicao.eq(421).connectedPixelCount(10,true).lte(min_pix));
  var erro_regen_2104 = transicao.eq(2104).and(transicao.eq(2104).connectedPixelCount(10,true).lte(min_pix));
  var class_ano_segui_corr = class_ano_segui.blend(erro_desma_0421.remap([1],[4]));
  class_ano_segui_corr = class_ano_segui_corr.blend(erro_regen_2104.remap([1],[21]));
  
  var erro_desma_1121 = transicao.eq(1121).and(transicao.eq(1121).connectedPixelCount(10,true).lte(min_pix));
  var erro_regen_2111 = transicao.eq(2111).and(transicao.eq(2111).connectedPixelCount(10,true).lte(min_pix));
  class_ano_segui_corr = class_ano_segui.blend(erro_desma_1121.remap([1],[11]));
  class_ano_segui_corr = class_ano_segui_corr.blend(erro_regen_2111.remap([1],[21]));

  var erro_desma_1221 = transicao.eq(1221).and(transicao.eq(1221).connectedPixelCount(10,true).lte(min_pix));
  var erro_regen_2112 = transicao.eq(2112).and(transicao.eq(2112).connectedPixelCount(10,true).lte(min_pix));
  class_ano_segui_corr = class_ano_segui.blend(erro_desma_1221.remap([1],[12]));
  class_ano_segui_corr = class_ano_segui_corr.blend(erro_regen_2112.remap([1],[21])).rename('classification_'+ (ano + 1));

  var erro_desma_2921 = transicao.eq(2921).and(transicao.eq(2921).connectedPixelCount(10,true).lte(min_pix));
  var erro_regen_2129 = transicao.eq(2129).and(transicao.eq(2129).connectedPixelCount(10,true).lte(min_pix));
  class_ano_segui_corr = class_ano_segui.blend(erro_desma_2921.remap([1],[29]));
  class_ano_segui_corr = class_ano_segui_corr.blend(erro_regen_2129.remap([1],[21])).rename('classification_'+ (ano + 1));

  var erro_desma_1321 = transicao.eq(1321).and(transicao.eq(1321).connectedPixelCount(10,true).lte(min_pix));
  var erro_regen_2113 = transicao.eq(2113).and(transicao.eq(2113).connectedPixelCount(10,true).lte(min_pix));
  class_ano_segui_corr = class_ano_segui.blend(erro_desma_1321.remap([1],[13]));
  class_ano_segui_corr = class_ano_segui_corr.blend(erro_regen_2113.remap([1],[21])).rename('classification_'+ (ano + 1));

  // Add the corrected classification for the next year to the final image
  class_corrigido = class_corrigido.addBands(class_ano_segui_corr);

}

// Add the original and corrected classifications to the map
Map.addLayer(col7.select('classification_2010'), vis, 'col7', true);
Map.addLayer(class_corrigido.select('classification_2010'), vis, 'class_corrigido', true);

// Set the metadata for the final classification image
class_corrigido = class_corrigido
.set('territory', 'BRAZIL')
.set('biome', 'MATAATLANTICA')
.set('source', 'arcplan')
.set('version', versao_out)
.set('year', versao_out)
.set('collection_id', col)
.set('description', descricao);

// Export the final classification image to an asset
Export.image.toAsset({
    "image": class_corrigido.toInt8(),
    'description': prefixo_out+versao_out,
    'assetId': dirout+prefixo_out+versao_out,
    "scale": 30,
    "pyramidingPolicy": {
        '.default': 'mode'
    },
    "maxPixels": 1e13,
    "region": limite_MA
});
